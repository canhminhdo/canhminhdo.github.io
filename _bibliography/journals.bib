--- JOURNAL PAPERS
@article{YatiCJ21,
  abbr         = {Computer Journal},
  bibtex_show  = {true},
  author       = "Yati Phyo and Minh Do, Canh and Kazuhiro Ogata",
  title        = "A Divide \& Conquer Approach to Leads-to Model Checking",
  journal      = "The Computer Journal",
  publisher    = "Oxford University Press",
  year         = "2021",
  doi          = "10.1093/comjnl/bxaa183",
  url          = "https://doi.org/10.1093/comjnl/bxaa183",
}

@article{MoeMath21,
  abbr         = {Mathematics},
  bibtex_show  = {true},
  author       = {Moe Nandi Aung and Yati Phyo and Minh Do, Canh and Kazuhiro Ogata},
  title        = {A Divide \& Conquer Approach to Eventual Model Checking},
  journal      = {Mathematics},
  year         = {2021},
  VOLUME       = {9},
  NUMBER       = {4},
  ARTICLE-NUMBER = {368},
  DOI          = {10.3390/math9040368},
  URL          = {https://www.mdpi.com/2227-7390/9/4/368},
  ISSN         = {2227-7390},
  DOI          = {10.3390/math9040368}
}

@article{MonJvlc2021,
  abbr         = {JVLC},
  bibtex_show  = {true},
	doi          = {10.18293/jvlc2021-n2-005},
	url          = {https://doi.org/10.18293%2Fjvlc2021-n2-005},
	year         = 2021,
	month        = {dec},
	publisher    = {{KSI} Research Inc.},
	volume       = {2021},
	number       = {2},
	pages        = {39--51},
	author       = {Thet Wai Mon and Dang Duy Bui and Duong Dinh Tran and Minh Do, Canh and Kazuhiro Ogata},
	title        = {Graphical Animations of the {NS}(L){PK} Authentication Protocols},
	journal      = {Journal of Visual Language and Computing},
  pdf          = {https://ksiresearch.org/jvlc/journal/JVLC2021N2/paper005.pdf}
}

@article{Canh1Access22,
  abbr         = {IEEE Access},
  bibtex_show  = {true},
  author       = {Minh Do, Canh and
                  Kazuhiro Ogata},
  title        = {Parallel Specification-Based Testing for Concurrent Programs},
  journal      = {{IEEE} Access},
  volume       = {10},
  pages        = {24955--24975},
  year         = {2022},
  url          = {https://doi.org/10.1109/ACCESS.2022.3155629},
  doi          = {10.1109/ACCESS.2022.3155629},
  timestamp    = {Fri, 01 Apr 2022 11:23:26 +0200},
  biburl       = {https://dblp.org/rec/journals/access/DoO22.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{Canh2Access22,
  abbr         = {{IEEE} Access},
  bibtex_show  = {true},
  author       = {Minh Do, Canh and
                  Yati Phyo and
                  Kazuhiro Ogata},
  title        = {Sequential and Parallel Tools for Model Checking Conditional Stable
                  Properties in a Layered Way},
  journal      = {{IEEE} Access},
  volume       = {10},
  pages        = {133749--133765},
  year         = {2022},
  url          = {https://doi.org/10.1109/ACCESS.2022.3230844},
  doi          = {10.1109/ACCESS.2022.3230844},
  timestamp    = {Mon, 26 Jun 2023 20:53:40 +0200},
  biburl       = {https://dblp.org/rec/journals/access/DoPO22.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{CanhTosem23,
  abbr         = {ACM TOSEM},
  bibtex_show  = {true},
  author = {Do, Canh Minh and Phyo, Yati and Riesco, Adri\'{a}n and Ogata, Kazuhiro},
  title = {Optimization Techniques for Model Checking Leads-to Properties in a Stratified Way},
  year = {2023},
  issue_date = {November 2023},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {32},
  number = {6},
  issn = {1049-331X},
  url = {https://doi.org/10.1145/3604610},
  doi = {10.1145/3604610},
  abstract = {We devised the L+1-layer divide \& conquer approach to leads-to model checking (L+1-DCA2L2MC) and its parallel version, and developed sequential and parallel tools for L+1-DCA2L2MC. In a temporal logic called UNITY, designed by Chandy and Misra, the leads-to temporal connective plays an important role and many case studies have been conducted in UNITY, demonstrating that many systems requirements can be expressed as leads-to properties. Hence, it is worth dedicating to these properties. Counterexample generation is one of the main tasks in the L+1-DCA2L2MC technique that can be optimized to improve its running performance. This article proposes a technique to find all counterexamples at once in model checking with a new model checker. Furthermore, layer configuration selection is essential to make the best use of the L+1-DCA2L2MC technique. This work also proposes an approach to finding a good layer configuration for the technique with an analysis tool. Some experiments are conducted to demonstrate the power and usefulness of the two optimization techniques, respectively. Moreover, our sequential and parallel tools are compared with SPIN and LTSmin model checkers, showing a promising way to mitigate the state space explosion and improve the running performance of model checking when dealing with large state spaces.},
  journal = {ACM Transactions on Software Engineering and Methodology},
  month = {sep},
  articleno = {151},
  numpages = {38},
  keywords = {state space explosion, master-worker model, Leads-to properties, parallel model checking, Maude}
}

@Article{YatiInfo23,
  abbr         = {Information},
  bibtex_show  = {true},
  AUTHOR = {Phyo, Yati and Aung, Moe Nandi and Do, Canh Minh and Ogata, Kazuhiro},
  TITLE = {A Layered and Parallelized Method of Eventual Model Checking},
  JOURNAL = {Information},
  VOLUME = {14},
  YEAR = {2023},
  NUMBER = {7},
  ARTICLE-NUMBER = {384},
  URL = {https://www.mdpi.com/2078-2489/14/7/384},
  DOI = {10.3390/info14070384},
  ISSN = {2078-2489},
  ABSTRACT = {Termination or halting is an important system requirement that many systems should satisfy and can be expressed in linear temporal logic as eventual properties. We devised a divide-and-conquer approach to eventual model checking in order to reduce the state space explosion in model checking. The idea of the technique is to split an original model checking problem for eventual properties into multiple smaller model checking problems and handle each smaller one. Due to the nature of the divide-and-conquer approach, each smaller model checking problem can essentially be tackled independently. Hence, this paper proposes a parallel technique/tool based on a master&ndash;worker pattern for the divide-and-conquer approach to model checking eventual properties. We carry out some experiments to show the effectiveness of our parallel technique/tool, which can somewhat enhance the running performance to a certain extent when conducting model checking for eventual properties.},
}

@article{DuongPJ23,
  abbr         = {PeerJ},
  bibtex_show  = {true},
  author       = {Duong Dinh Tran and
                  Canh Minh Do and
                  Santiago Escobar and
                  Kazuhiro Ogata},
  title        = {Hybrid post-quantum Transport Layer Security formal analysis in Maude-NPA
                  and its parallel version},
  journal      = {PeerJ Computer Science},
  volume       = {9},
  pages        = {e1556},
  year         = {2023},
  url          = {https://doi.org/10.7717/peerj-cs.1556},
  doi          = {10.7717/peerj-cs.1556},
  timestamp    = {Wed, 04 Oct 2023 08:55:07 +0200},
  biburl       = {https://dblp.org/rec/journals/peerj-cs/TranDEO23.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{CanhPJ23,
  abbr         = {PeerJ},
  bibtex_show  = {true},
  author       = {Canh Minh Do and Kazuhiro Ogata},
  title        = {Symbolic Model Checking Quantum Circuits in Maude},
  journal      = {PeerJ Computer Science},
  volume       = {10},
  pages        = {e2098},
  url          = {https://doi.org/10.7717/peerj-cs.2098},
  doi          = {10.7717/peerj-cs.2098},
  year         = {2024}
}

@article{CanhTosem24,
author = {Do, Canh Minh and Takagi, Tsubasa and Ogata, Kazuhiro},
title = {Automated Quantum Protocol Verification Based on Concurrent Dynamic Quantum Logic},
year = {2024},
issue_date = {July 2025},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {6},
issn = {1049-331X},
url = {https://doi.org/10.1145/3708475},
doi = {10.1145/3708475},
abstract = {While constructing practical quantum computers by big companies remains a challenge, the application of quantum communication and cryptography has made remarkable progress. Therefore, it is crucial to verify quantum protocols before they can be trusted in safety and security-critical applications. We have proposed Basic Dynamic Quantum Logic (BDQL) to formalize and verify sequential models of quantum protocols with a support tool developed in Maude. However, BDQL does not support concurrency in its formalization. This article introduces Concurrent Dynamic Quantum Logic (CDQL), an extension of BDQL, to formalize and verify concurrent models of quantum protocols. CDQL is more expressive than BDQL by considering concurrent behavior and communication among participants in quantum protocols. Since CDQL is a conservative extension of BDQL, we extend the syntax of BDQL to CDQL and make a transformation from CDQL to BDQL without interrupting the semantics of BDQL. We also extend the implementation of BDQL to support CDQL, making a new support tool in Maude. The new support tool is equipped with a lazy rewriting strategy to make the verification process significantly faster. Several quantum communication protocols are successfully formalized and verified in BDQL/CDQL, demonstrating the effectiveness of our automated approach and tool in verifying quantum protocols.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = jul,
articleno = {182},
numpages = {36},
keywords = {Concurrent Dynamic Quantum Logic, Parallel Composition, Quantum Protocols, Maude}
}

@article{CanhTDSC25,
  abbr         = {IEEE TDSC},
  bibtex_show  = {true},
  author={Do, Canh Minh and Riesco, Adri√°n and Escobar, Santiago and Ogata, Kazuhiro},
  journal={IEEE Transactions on Dependable and Secure Computing}, 
  title={Parallel Maude-NPA for Cryptographic Protocol Analysis}, 
  publisher    = {IEEE},
  year={2025},
  volume={},
  number={},
  pages={1-18},
  abstract={Maude-NPA is a formal verification tool for analyzing cryptographic protocols in the Dolev-Yao strand space model modulo an equational theory defining the cryptographic primitives. It starts from an attack state to find counterexamples or conclude that the attack concerned cannot be conducted by performing a backward narrowing reachability analysis. Although Maude-NPA is a powerful analyzer, its running performance can be improved by taking advantage of parallel and/or distributed computing when dealing with complex protocols whose state space is huge. This paper describes a parallel version of Maude-NPA in which the backward narrowing and the transition subsumption at each layer in Maude-NPA are conducted in parallel. A tool supporting the parallel version has been implemented in Maude with a master-worker model using meta-interpreters. We report on some experiments of various kinds of protocols that demonstrate that the tool can increase the running performance of Maude-NPA by 52% on average for complex case studies in which the number of states located at each layer is considerably large.},
  doi={10.1109/TDSC.2025.3589584}}